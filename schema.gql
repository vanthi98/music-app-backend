# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccountType {
  id: ID!
  email: String!
  password: String!
  resetPasswordToken: String
  resetPasswordExpires: Float
}

type NotificationType {
  _id: ID!
  thumbnail: String
  notice_id: String!
  title: String!
  description: String!
  createdAt: DateTime
  type: String!
  status: String!
  user: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CreateNotificationType {
  _id: ID!
}

type HistoryType {
  song_id: String!
  order: Float!
}

type ProfileType {
  id: ID!
  account_id: String
  first_name: String
  last_name: String
  email: String
  age: Float
  gender: Boolean
  birthday: String
  avatarUrl: String
  account_name: String
  listLikedSong: [String!]
  listFollowings: [String!]
  listFollowers: [String!]
  listHistory: [HistoryType!]
  listPlaylist: [String!]
}

type Account {
  id: String
  account_name: String
  password: String
}

type AccountToken {
  access_token: String!
  account: Account!
}

type TestType {
  id: ID!
  title: String!
}

type SongType {
  _id: ID!
  song_name: String!
  song_url: String!
  song_image_url: String
  lyric: String
  author: String
  like: Float!
  comment: Float!
  listen: Float!
  share: Float!
  uploader: String!
  duration: Float!
  listLikedUser: [String!]
  listComment: [String!]
  country: String
  createdAt: DateTime
  updatedAt: DateTime
  category: String
}

type UploadSongType {
  _id: ID!
}

type UserType {
  account_name: String
  avatarUrl: String
}

type CommentType {
  _id: ID!
  user: UserType!
  song: String!
  parent: String
  title: String!
  content: String!
  like: Float!
  dislike: Float!
  createdAt: DateTime
  updatedAt: DateTime
  children: [String!]
  replyTo: String
}

type CreateCommentType {
  _id: ID!
}

type PlaylistType {
  _id: ID!
  user: String!
  name: String!
  notes: String
  createdAt: DateTime
  updatedAt: DateTime
  listSong: [String!]
}

type CreatePlaylistType {
  _id: ID!
}

type CategoryType {
  _id: ID!
  category_id: String!
  name: String!
  slug: String!
  listSong: [String!]
}

type CountryType {
  _id: ID!
  country_id: String!
  name: String!
  slug: String!
  listSong: [String!]
}

type Query {
  getAllAccount: [AccountType!]!
  getAccount(id: String!): AccountType!
  getCurrentAccountId: String!
  getNoticeByCurrentAccount: [NotificationType!]!
  getProfile(id: String!): ProfileType!
  getProfileByAccountId(account_id: String!): ProfileType!
  getProfileByEmail(email: String!): ProfileType!
  checkFollow(follow_id: String!): String!
  getListFollowers: [ProfileType!]!
  getListFollowings: [ProfileType!]!
  getAllTest: [TestType!]!
  getOneTest(title: String!): TestType!
  getAllSong(keyword: String): [SongType!]!
  getSong(song_id: String): SongType!
  getSongByCurrentAccount: [SongType!]!
  getSongByAccount(account_email: String!): [SongType!]!
  getSongById(id: String!): [SongType!]!
  getLikedSongByCurrentAccount: [SongType!]!
  getHistoryByCurrentAccount: [SongType!]!
  getLikedSongByEmail(account_email: String!): [SongType!]!
  getCommentBySong(song_id: String!): [CommentType!]!
  getAllPlaylist: [PlaylistType!]!
  getSongByPlaylist(playlist_id: String!): [SongType!]!
  getPlaylistById(playlist_id: String!): PlaylistType!
  getAllCountry: [CountryType!]!
}

type Mutation {
  createAccount(input: AccountInput!): AccountType!
  resetAccount(input: String!): AccountType!
  confirmResetPasswordToken(token: String!): Boolean!
  resetAccountPassword(input: ResetPasswordInput!): AccountType!
  deleteResetPasswordToken(email: String!): String!
  createNotification(user_id: String!, input: NotificationInput!): CreateNotificationType!
  updateProfile(input: ProfileInput!, id: String!): ProfileType!
  followUser(follow_id: String!): String!
  unFollowUser(follow_id: String!): String!
  login(input: LoginInput!): AccountToken!
  insertTest(title: String!): String!
  deleteTest(title: String!): String!
  uploadSong(input: SongInput!): UploadSongType!
  likeSong(song_id: String!): String!
  unlikeSong(song_id: String!): String!
  listenSong(song_id: String!): String!
  updateSong(input: SongUpdateInput!, song_id: String!): SongType!
  createComment(replyTo: String, input: CommentInput!, parent_id: String, song_id: String!): CreateCommentType!
  createPlaylist(input: CreatePlaylistInput!): CreatePlaylistType!
  addSongToPlaylist(song_id: String!, playlist_id: String!): CreatePlaylistType!
  removeSongFromPlaylist(song_id: String!, playlist_id: String!): CreatePlaylistType!
  removePlaylist(playlist_id: String!): String!
}

input AccountInput {
  account_name: String!
  password: String!
  email: String!
  first_name: String!
  last_name: String!
  age: Float
  gender: Boolean!
  birthday: String!
}

input ResetPasswordInput {
  token: String!
  password: String!
}

input NotificationInput {
  title: String!
  description: String!
  type: String!
  status: String!
}

input ProfileInput {
  account_id: String
  first_name: String
  last_name: String
  email: String
  account_name: String
  age: Float
  gender: Boolean
  birthday: String
  avatarUrl: String
}

input LoginInput {
  email: String!
  password: String!
}

input SongInput {
  song_name: String!
  song_url: String!
  song_image_url: String
  lyric: String
  author: String
  country: String
  category: String
}

input SongUpdateInput {
  song_name: String
  song_url: String
  song_image_url: String
  lyric: String
  author: String
  country: String
  category: String
}

input CommentInput {
  title: String!
  content: String!
}

input CreatePlaylistInput {
  name: String!
  notes: String
  listSong: [String!]
}
